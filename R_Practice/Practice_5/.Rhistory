while(i <= length(x)-dt){
switch(method,
"Arifm" = {y = append(y, arifm(x[i], x[i-dt], x[i+dt]))},
"Geom" = {y = append(y, geom(x[i], x[i-dt], x[i+dt]))},
"Garm" = {y = append(y, garm(x[i], x[i-dt], x[i+dt]))}
)
i = i+dt
}
return(y)
}
test = out_of_trend(c(2,4,6), 1)
test = out_of_trend(c(2,4,6,8,10), 1)
test = out_of_trend(c(1,2,4,7,4,2,1), 1)
test
test = out_of_trend(c(1,2,4,7,4,2,1), 2)
test
out_of_trend = function(x, dt, method = c("Arifm", "Geom", "Garm")){
#Исключительные случаи
if(length(x) < 3 |
dt > ceiling(length(x / 2)-1) |
!is.numeric(x) |
!is.numeric(dt)){
print("Error: an argument is inapplicable")
}
#Поднять на минимальный элемент
x = x + min(x) + 1
y = c()
if(length(method) == 3){
method = "Arifm"
}
i = dt+1
while(i <= length(x)-dt){
switch(method,
"Arifm" = {y = append(y, arifm(x[i], x[i-dt], x[i+dt]))},
"Geom" = {y = append(y, geom(x[i], x[i-dt], x[i+dt]))},
"Garm" = {y = append(y, garm(x[i], x[i-dt], x[i+dt]))}
)
i = i+1
}
return(y)
}
test = out_of_trend(c(1,2,4,7,4,2,1), 2)
test
test = out_of_trend(c(2,4,7,4,2), 2)
test
test = out_of_trend(c(2,4,7,4,2), 1)
test
test = out_of_trend(as.factor(c(2,4,7,4,2)), 1)
class(as.factor(c(1,2,3)))
test = out_of_trend(c(2,4), 1)
test = out_of_trend(c(2,4,2), 3)
test = out_of_trend(c(2,4,2), "s")
test = out_of_trend(c(2,4,2), "s")
out_of_trend = function(x, dt, method = c("Arifm", "Geom", "Garm")){
#Исключительные случаи
if(length(x) < 3 |
dt > ceiling(length(x / 2)-1) |
!is.numeric(x) |
!is.numeric(dt)){
print("Error: an argument is inapplicable")
return()
}
#Поднять на минимальный элемент
x = x + min(x) + 1
y = c()
if(length(method) == 3){
method = "Arifm"
}
i = dt+1
while(i <= length(x)-dt){
switch(method,
"Arifm" = {y = append(y, arifm(x[i], x[i-dt], x[i+dt]))},
"Geom" = {y = append(y, geom(x[i], x[i-dt], x[i+dt]))},
"Garm" = {y = append(y, garm(x[i], x[i-dt], x[i+dt]))}
)
i = i+1
}
return(y)
}
test = out_of_trend(c(2,4,2), "s")
test = out_of_trend(as.factor(c(1,2,3)), 1)
test = out_of_trend(as.factor(c(1,2,3)), 1)
out_of_trend = function(x, dt, method = c("Arifm", "Geom", "Garm")){
#Исключительные случаи
if(length(x) < 3 |
!is.numeric(x) |
!is.numeric(dt) |
dt > ceiling(length(x / 2)-1)){
print("Error: an argument is inapplicable")
return()
}
#Поднять на минимальный элемент
x = x + min(x) + 1
y = c()
if(length(method) == 3){
method = "Arifm"
}
i = dt+1
while(i <= length(x)-dt){
switch(method,
"Arifm" = {y = append(y, arifm(x[i], x[i-dt], x[i+dt]))},
"Geom" = {y = append(y, geom(x[i], x[i-dt], x[i+dt]))},
"Garm" = {y = append(y, garm(x[i], x[i-dt], x[i+dt]))}
)
i = i+1
}
return(y)
}
test = out_of_trend(as.factor(c(1,2,3)), 1)
out_of_trend = function(x, dt, method = c("Arifm", "Geom", "Garm")){
#Исключительные случаи
if(length(x) < 3 |
!is.numeric(x) |
!is.numeric(dt) |
dt > ceiling(length(x) / 2 - 1)){
print("Error: an argument is inapplicable")
return()
}
#Поднять на минимальный элемент
x = x + min(x) + 1
y = c()
if(length(method) == 3){
method = "Arifm"
}
i = dt+1
while(i <= length(x)-dt){
switch(method,
"Arifm" = {y = append(y, arifm(x[i], x[i-dt], x[i+dt]))},
"Geom" = {y = append(y, geom(x[i], x[i-dt], x[i+dt]))},
"Garm" = {y = append(y, garm(x[i], x[i-dt], x[i+dt]))}
)
i = i+1
}
return(y)
}
test = out_of_trend(as.factor(c(1,2,3)), 1)
test = out_of_trend(as.factor(c(1,2,3,5,8,13,21)), 1)
test = out_of_trend(c(1,2,3,5,8,13,21), 1)
test
test = out_of_trend(c(1,2,3,5,8,13,21,34,55), 1)
test
test = out_of_trend(c(1,2,3,5,8,13,21,34,55), 1, "Geom")
test
# Task 3
t = seq(0, 10, 0.1)
class(t)
# Task 3
t = seq(0, 10, 0.1)
x = 2*t + 3 + sin(2*t)
print(mean(x))
print(x[1:30])
xn = out_of_trend(x, 5)
print(mean(xn))
seq(1, 10)
# Task 4
Alter-Johns = function(y){
a = c()
while(t <= floor(length(y)/2)){
summ = 0
while(i <= length(y)-t){
sum = sum + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (n - t)
a = append(a, summ)
t = t+1
}
}
# Task 4
Alter-Johns = function(y){
a = c()
while(t <= floor(length(y)/2)){
summ = 0
while(i <= length(y)-t){
sum = sum + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (n - t)
a = append(a, summ)
t = t+1
}
}
# Task 4
alter.johns = function(y){
a = c()
while(t <= floor(length(y)/2)){
summ = 0
while(i <= length(y)-t){
sum = sum + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (n - t)
a = append(a, summ)
t = t+1
}
}
plot(xn, alter.johns(xn))
alter.johns(xn)
# Task 4
alter.johns = function(y){
t = 1
a = c()
while(t <= floor(length(y)/2)){
i = 1
summ = 0
while(i <= length(y)-t){
sum = sum + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (n - t)
a = append(a, summ)
t = t+1
}
}
alter.johns(xn)
# Task 4
alter.johns = function(y){
t = 1
a = c()
while(t <= floor(length(y)/2)){
i = 1
summ = 0
while(i <= length(y)-t){
summ = summ + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (n - t)
a = append(a, summ)
t = t+1
}
}
alter.johns(xn)
xn = out_of_trend(x, 5)
# Task 4
alter.johns = function(y){
t = 1
a = c()
while(t <= floor(length(y)/2)){
i = 1
summ = 0
while(i <= length(y)-t){
summ = summ + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (length(y)-t)
a = append(a, summ)
t = t+1
}
}
alter.johns(xn)
plot(xn, alter.johns(xn))
# Task 5
xn_fluctuations = alter.johns(xn)
# Task 4
alter.johns = function(y){
t = 1
a = c()
while(t <= floor(length(y)/2)){
i = 1
summ = 0
while(i <= length(y)-t){
summ = summ + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (length(y)-t)
a = append(a, summ)
t = t+1
}
return(a)
}
# Task 5
xn_fluctuations = alter.johns(xn)
plot(xn, xn_fluctuations)
plot(xn, alter.johns(xn))
# Task 5
xn_fluctuations = alter.johns(xn)
plot(1:length(xn_fluctuations), xn_fluctuations)
#????? 2
# ??????? 1
rm(list = ls())
if ("quantmod" %in% rownames(installed.packages()) == FALSE) {
install.packages("quantmod") }
library(quantmod)
if ("stringr" %in% rownames(installed.packages()) == FALSE) {
install.packages("stringr") }
library(stringr)
downloadable_stocks <- c("ATVI", "^IXIC")
quantmod::getSymbols(Symbols = downloadable_stocks,
src = "yahoo",
from = as.Date.character("1900-01-01"))
db <- data.frame(get(downloadable_stocks[1]))
print(head(db))
# ??????? 2
out_of_trend <- function(x, dt, method = "Arifm") {
stopifnot(length(x) >= 3, is.numeric(dt), dt <= ceiling(length(x) / 2) - 1, is.numeric(x))
res <- c()
for(i in 1:length(x)) {
if ((i - dt >= 1) && (i + dt <= length(x))) {
if (method == "Geom") {
res<- append(res, log((x[i - dt]*x[i + dt]) / ((x[i])^2)))
} else if (method == "Garm") {
res <- append(res, log((2*x[i - dt]*x[i + dt]) / (x[i]*(x[i - dt] + x[i + dt]))))
} else {
res <- append(res, log((x[i - dt] + x[i + dt]) / (2*x[i])))
}
}
}
return(res)
}
data = db$ATVI.Open
data <- data + min(data) + 1
res <- out_of_trend(x=data, dt = 1, method = "Geom")
print(head(res))
print(length(res))
# ??????? 3
t <- seq(0, 10, 0.1)
x <- 2*t + 3 + sin(2*t)
print(x)
x_mean <- mean(x)
print(x_mean)
x <- x + min(x) + 1
xn <- out_of_trend(x, dt = 1, method = "Garm")
print(xn)
xn_mean <- mean(xn)
print(xn_mean)
plot(t, x, type="l", lty="solid")
plot(t[1:99], xn, type="l", lty="solid", ylim=range(-0.007, 0.007))
xn_mean <- mean(xn)
# ??????? 4
Alter_Johns <- function(x, dt) {
at = 0
for(i in 1:(length(x) - dt)) {
at = x[i + dt] - x[i]
}
at = at/(length(x) - dt)
}
res <- Alter_Johns(x, dt=1)
print(res)
lines(t[1:99], rep(res, 99), type="l", ylim=range(-0.007, 0.007))
# ??????? 5
res <- Alter_Johns(xn, dt=3)
print(res)
plot(t[1:99], xn, type="l", lty="solid", ylim=range(-0.007, 0.007))
plot(t[1:99], xn, type="l", lty="solid", ylim=range(-0.007, 0.007))
{if ("quantmod" %in% rownames(installed.packages()) == FALSE) {
install.packages("quantmod") }
library(quantmod)
if ("stringr" %in% rownames(installed.packages()) == FALSE) {
install.packages("stringr") }
library(stringr)}
# Task 1
downloadable_stocks <- c("NVDA", "^IXIC")
# Функция получения фреймов с данными
quantmod::getSymbols(Symbols = downloadable_stocks,
src = "yahoo",
from = as.Date.character("1900-01-01"))
df <- data.frame(get(downloadable_stocks[1]))
# Применяем регулярное выражение для поиска и удаления ненужных символов
downloadable_stocks <- stringr::str_remove(downloadable_stocks, "[:punct:\\^]")
rm(list = downloadable_stocks)
# Task 2
#Arithmetic
arifm = function(xt, xt_left, xt_right){
log((xt_left + xt_right)/(2*xt))
}
#Geometric
geom = function(xt, xt_left, xt_right){
log((xt_left * xt_right)/(xt^2))
}
#Harmonic
garm = function(xt, xt_left, xt_right){
log((2*x_left*x_right)/(xt*(x_left+x_right)))
}
out_of_trend = function(x, dt, method = c("Arifm", "Geom", "Garm")){
#Исключительные случаи
if(length(x) < 3 |
!is.numeric(x) |
!is.numeric(dt) |
dt > ceiling(length(x) / 2 - 1)){
print("Error: an argument is inapplicable")
return()
}
#Поднять на минимальный элемент
x = x + min(x) + 1
y = c()
if(length(method) == 3){
method = "Arifm"
}
i = dt+1
while(i <= length(x)-dt){
switch(method,
"Arifm" = {y = append(y, arifm(x[i], x[i-dt], x[i+dt]))},
"Geom" = {y = append(y, geom(x[i], x[i-dt], x[i+dt]))},
"Garm" = {y = append(y, garm(x[i], x[i-dt], x[i+dt]))}
)
i = i+1
}
return(y)
}
# Task 3
t = seq(0, 10, 0.1)
x = 2*t + 3 + sin(2*t)
print(mean(x))
xn = out_of_trend(x, 5)
print(mean(xn))
# Task 4
alter.johns = function(y){
t = 1
a = c()
while(t <= floor(length(y)/2)){
i = 1
summ = 0
while(i <= length(y)-t){
summ = summ + abs(y[i+t] - y[i])
i = i+1
}
summ = summ / (length(y)-t)
a = append(a, summ)
t = t+1
}
return(a)
}
# Task 5
xn_fluctuations = alter.johns(xn)
plot(1:length(xn_fluctuations), xn_fluctuations, type="1")
plot(1:length(xn_fluctuations), xn_fluctuations, type="l")
# Task 6
head(df)
plot(1:length(x), x, type="l")
plot(1:length(xn), xn, type="l")
plot(1:length(xn_fluctuations), xn_fluctuations, type="l")
plot(1:nrow(df), df$NVDA.Close, type="l")
without_trend = out_of_trend(df$NVDA.Close, 2)
plot(1:nrow(without_trend), without_trend, type="l")
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 5)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 10)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 20)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 50)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 100)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 200)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 300)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 400)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 500)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 1000)
plot(1:length(without_trend), without_trend, type="l")
5
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 500)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 700)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 2000)
plot(1:length(without_trend), without_trend, type="l")
without_trend = out_of_trend(df$NVDA.Close, 1000)
plot(1:length(without_trend), without_trend, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 1000)
plot(1:length(without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 500)
plot(1:length(without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
nvda_without_trend = out_of_trend(df$NVDA.Close, 500)
plot(1:length(without_trend), nvda_without_trend, type="l")
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 3000)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 100)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 500)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 1000)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
plot(1:nrow(df), df$NVDA.Close, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 1000)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 2000)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 100)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
plot(1:nrow(df), df$NVDA.Close, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 100)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(nvda_without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
nvda_without_trend = out_of_trend(df$NVDA.Close, 500)
plot(1:length(nvda_without_trend), nvda_without_trend, type="l")
nvda_fluctuations = alter.johns(nvda_without_trend)
plot(1:length(nvda_fluctuations), nvda_fluctuations, type="l")
