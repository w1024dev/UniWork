plot(decomposed.additive$seasonal, col = "blue")
plot(decomposed.multiplicative$seasonal, col = "red")
plot(decomposed.additive$seasonal, col = "blue")
plot(decomposed.multiplicative$seasonal, col = "red")
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(0, 3)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$seasonal, col = "blue")
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(0, 1.5)))
lines(decomposed.additive$seasonal, col = "blue")
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
# Сравнение случайных компонент
plot(decomposed.multiplicative$random, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
lines(decomposed.multiplicative$x)
# Сравнение трендов
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
# Сравнение сезонных компонент
dev.new()
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
# Сравнение случайных компонент
dev.new
plot(decomposed.multiplicative$random, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
# Сравнение случайных компонент
dev.new(0)
plot(decomposed.multiplicative$random, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
summary(data.ts.monthly)
data.monthly <- data.monthly %>% select(c(date, monthly_mean))
rm(list = ls())
data <- read.csv("salesdaily.csv")
head(data)
str(data)
library(dplyr)
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.monthly %>% select(c(date, monthly_mean))
View(data.monthly)
data <- read.csv("salesdaily.csv")
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.monthly %>% select(-Year, -Month)
data.monthly <- data.frame(data.monthly$date, data.monthly$monthly_mean)
data.ts.monthly = ts(data.monthly$monthly_mean, start = c(2014, 1), frequency = 12)
View(data.monthly)
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.frame(date = data.monthly$date, monthly_mean = data.monthly$monthly_mean)
data.ts.monthly = ts(data.monthly$monthly_mean, start = c(2014, 1), frequency = 12)
View(data.monthly)
str(data.ts.monthly)
summary(data.ts.monthly)
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
decomposed.multiplicative <- decompose(data.ts.monthly, type = "multiplicative")
decomposed.additive <- decompose(data.ts.monthly, type = "additive")
# Сравнение трендов
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
# Сравнение сезонных компонент
dev.new()
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
# Сравнение случайных компонент
dev.new()
plot(decomposed.multiplicative$random, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
# Сравнение сезонных компонент
dev.new()
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
acf(data.ts.monthly)
# Основная программа
library(c(ggplot2, forecast)
# Основная программа
library(c(ggplot2, forecast))
# Основная программа
library(c(ggplot2, forecast))
# Основная программа
library(c("ggplot2", "forecast"))
install.packages(forecast)
install.packages("forecast")
library(forecast)
ggtsdisplay(data.ts.monthly)
dev.new()
ggtsdisplay(diff(data.ts.monthly))
ggtsdisplay(diff(data.ts.monthly))
ggtsdisplay(diff(data.ts.monthly))
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
ggtsdisplay(data.ts.monthly)
rm(list = ls())
data <- read.csv("salesdaily.csv")
library(dplyr)
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.frame(date = data.monthly$date, monthly_mean = data.monthly$monthly_mean)
data.ts.monthly = ts(data.monthly$monthly_mean, start = c(2014, 1), frequency = 12)
summary(data.ts.monthly)
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
grid()
dev.new()
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
grid()
rm(list = ls())
data <- read.csv("salesdaily.csv")
head(data)
str(data)
library(dplyr)
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.frame(date = data.monthly$date, monthly_mean = data.monthly$monthly_mean)
data.ts.monthly = ts(data.monthly$monthly_mean, start = c(2014, 1), frequency = 12)
View(data.monthly)
summary(data.ts.monthly)
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
grid()
# Основная программа
library(ggplot)
# Основная программа
library(ggplot2)
library(forecast)
decomposed.multiplicative <- decompose(data.ts.monthly, type = "multiplicative")
decomposed.additive <- decompose(data.ts.monthly, type = "additive")
ggtsdisplay(data.ts.monthly)
decomposed.multiplicative <- decompose(data.ts.monthly, type = "multiplicative")
# Сравнение трендов
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
View(decomposed.additive)
View(decomposed.additive)
decomposed.multiplicative$trend
decomposed.multiplicative$trend
# Сохранение нового файла
decomposed.additive.df = data.frame(decomposed.additive)
View(decomposed.additive)
decomposed.additive$
# Сохранение нового файла
decomposed.additive.df = decomposed.additive %>% data.frame(x, trend, seasonal, random, figure, type)
decomposed.additive$
# Сохранение нового файла
decomposed.additive.df = data.frame(decomposed.additive$x,
decomposed.additive$trend,
decomposed.additive$seasonal,
decomposed.additive$random,
decomposed.additive$figure,
decomposed.additive$type)
decomposed.additive$
# Сохранение нового файла
decomposed.additive.df = data.frame(decomposed.additive$x,
decomposed.additive$trend,
decomposed.additive$seasonal,
decomposed.additive$random)
trend = decomposed.multiplicative$trend
decomposed.multiplicative.df = data.frame(trend)
decomposed.additive$
# Сохранение нового файла
rm(decomposed.multiplicative.df)
rm(list = ls())
data <- read.csv("salesdaily.csv")
head(data)
str(data)
library(dplyr)
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.frame(date = data.monthly$date, monthly_mean = data.monthly$monthly_mean)
data.ts.monthly = ts(data.monthly$monthly_mean, start = c(2014, 1), frequency = 12)
summary(data.ts.monthly)
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
grid()
# Основная программа
library(ggplot2)
library(forecast)
ggtsdisplay(data.ts.monthly)
ggtsdisplay(diff(data.ts.monthly))
decomposed.multiplicative <- decompose(data.ts.monthly, type = "multiplicative")
decomposed.additive <- decompose(data.ts.monthly, type = "additive")
# Сохранение нового файла
x = decomposed.additive$x
trend = decomposed.additive$trend
seasonal = decomposed.additive$seasonal
random = decomposed.additive$random
decomposed.additive.df = data.frame(x, trend, seasonal, random)
# Сохранение нового файла
for(i in c(decomposed.additive, decomposed.multiplicative))
# Сохранение нового файла
for(i in c(decomposed.additive, decomposed.multiplicative)){}
# Сохранение нового файла
for(i in c(decomposed.additive, decomposed.multiplicative)){
x = i$x
trend = i$trend
seasonal = i$seasonal
random = i$random
print(paste(x, trend,seasonal, error))
}
# Сохранение нового файла
for(i in list(decomposed.additive, decomposed.multiplicative)){
x = i$x
trend = i$trend
seasonal = i$seasonal
random = i$random
print(paste(x, trend,seasonal, error))
}
print(paste(x, trend,seasonal, random))
print(paste(x, trend,seasonal, random, sep='\n'))
# Сохранение нового файла
for(i in list(decomposed.additive, decomposed.multiplicative)){
x = i$x
trend = i$trend
seasonal = i$seasonal
random = i$random
print("yep")
}
# Сохранение нового файла
df.final = dataframe()
# Сохранение нового файла
df.final = data.frame()
# Сохранение нового файла
x = decomposed.additive$x
trend = decomposed.additive$trend
seasonal = decomposed.additive$seasonal
random = decomposed.additive$random
decomposed.additive.df = data.frame(x, trend, seasonal, random)
x = decomposed.multiplicative$x
trend = decomposed.multiplicative$trend
seasonal = decomposed.multiplicative$seasonal
random = decomposed.multiplicative$random
decomposed.multiplicative.df = data.frame(x, trend, seasonal, random)
write.csv(decomposed.additive.df, file = "decomposed_additive.csv")
write.csv(decomposed.multiplicative.df, file = "decomposed_multiplicative.csv")
# Сравнение трендов
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
write.csv(decomposed.additive.df, file = "decomposed_additive.csv", row.names = FALSE)
write.csv(decomposed.multiplicative.df, file = "decomposed_multiplicative.csv", row.names = FALSE)
# Сравнение сезонных компонент
dev.new()
plot(decomposed.multiplicative$seasonal, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
# Сравнение случайных компонент
dev.new()
plot(decomposed.multiplicative$random, col = "red", ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
View(decomposed.multiplicative)
rm(list = ls())
data <- read.csv("salesdaily.csv")
head(data)
str(data)
# Обработка данных
if ("dplyr" %in% rownames(installed.packages()) == FALSE){
install.packages("dplyr")
}
library(dplyr)
data.monthly <- data
data.monthly <- data.monthly %>% group_by(Year, Month) %>% summarize("monthly_mean" = mean(M01AB))
data.monthly <- data.monthly %>% mutate("date" = as.Date(paste(Year, Month, "01", sep = "-")))
data.monthly <- data.frame(date = data.monthly$date, monthly_mean = data.monthly$monthly_mean)
data.ts.monthly = ts(data.monthly$monthly_mean, start = c(2014, 1), frequency = 12)
summary(data.ts.monthly)
View(data.monthly)
View(data.monthly)
plot(data.ts.monthly,
main = "Данные о ежедневных продажах препаратов группы M01AB",
xlab = "Дата",
ylab = "Ежедневные продажи")
grid()
# Основная программа
if ("ggplot2" %in% rownames(installed.packages()) == FALSE){
install.packages("ggplot2")
}
if ("ggplot2" %in% rownames(installed.packages()) == FALSE){
install.packages("ggplot2")
}
library(ggplot2)
if ("forecast" %in% rownames(installed.packages()) == FALSE){
install.packages("forecast")
}
library(ggplot2)
library(forecast)
ggtsdisplay(data.ts.monthly)
# Сравнение сезонных компонент
dev.new()
ggtsdisplay(data.ts.monthly)
ggtsdisplay(diff(data.ts.monthly))
mean(diff(data.ts.monthly))
# Сравнение трендов
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
decomposed.multiplicative <- decompose(data.ts.monthly, type = "multiplicative")
decomposed.additive <- decompose(data.ts.monthly, type = "additive")
# Сравнение трендов
plot(decomposed.multiplicative$trend, col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
grid()
# Сравнение трендов
plot(decomposed.multiplicative$trend, ylab = "Значения тренда", xlab = "Время", col = "red", ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
grid()
plot(decomposed.multiplicative$seasonal,
ylab = "Значения сезонной компоненты",
xlab = "Время",
col = "red",
ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
grid()
plot(decomposed.multiplicative$random,
ylab = "Значения случайной компоненты",
xlab = "Время",
col = "red",
ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
grid()
# Сравнение трендов
plot(decomposed.multiplicative$trend,
main = "Сравнение компонент тренда",
ylab = "Значения тренда",
xlab = "Время",
col = "red",
ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
grid()
plot(decomposed.multiplicative$seasonal,
main = "Сравнение сезонных компонент",
ylab = "Значения сезонной компоненты",
xlab = "Время",
col = "red",
ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
grid()
# Сравнение трендов
plot(decomposed.multiplicative$trend,
main = "Сравнение компонент тренда",
ylab = "Значения тренда",
xlab = "Время",
col = "red",
ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
legend("bottomleft",
legend = c("Additive trend", "Multiplicative trend"),
col = c("blue", "red"),
pch = c(19, 17),
bty = "o")
grid()
# Сравнение трендов
plot(decomposed.multiplicative$trend,
main = "Сравнение компонент тренда",
ylab = "Значения тренда",
xlab = "Время",
col = "red",
ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
legend("bottomleft",
legend = c("Additive trend", "Multiplicative trend"),
col = c("blue", "red"),
pch = c(30, 17),
bty = "o")
grid()
# Сравнение трендов
plot(decomposed.multiplicative$trend,
main = "Сравнение компонент тренда",
ylab = "Значения тренда",
xlab = "Время",
col = "red",
ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
legend("bottomleft",
legend = c("Additive trend", "Multiplicative trend"),
col = c("blue", "red"))
grid()
plot(decomposed.multiplicative$seasonal,
main = "Сравнение сезонных компонент",
ylab = "Значения сезонной компоненты",
xlab = "Время",
col = "red",
ylim = range(c(-1, 1.3)))
# Сравнение трендов
plot(decomposed.multiplicative$trend,
main = "Сравнение компонент тренда",
ylab = "Значения тренда",
xlab = "Время",
col = "red",
ylim = range(c(0, 7)))
lines(decomposed.multiplicative$x)
lines(decomposed.additive$trend, col = "blue")
grid()
legend("bottomleft",
legend = c("Additive trend", "Multiplicative trend"),
col = c("blue", "red"),
pch = c(19, 17),
bty = "o")
plot(decomposed.multiplicative$seasonal,
main = "Сравнение сезонных компонент",
ylab = "Значения сезонной компоненты",
xlab = "Время",
col = "red",
ylim = range(c(-1, 1.3)))
lines(decomposed.additive$seasonal, col = "blue")
grid()
legend("bottomleft",
legend = c("Additive trend", "Multiplicative trend"),
col = c("blue", "red"),
pch = c(19, 17),
bty = "o")
plot(decomposed.multiplicative$random,
ylab = "Значения случайной компоненты",
xlab = "Время",
col = "red",
ylim = range(c(-1, 1.3)))
lines(decomposed.additive$random, col = "blue")
grid()
legend("bottomleft",
legend = c("Additive trend", "Multiplicative trend"),
col = c("blue", "red"),
pch = c(19, 17),
bty = "o")
# Сохранение нового файла
x = decomposed.additive$x
trend = decomposed.additive$trend
seasonal = decomposed.additive$seasonal
random = decomposed.additive$random
decomposed.additive.df = data.frame(x, trend, seasonal, random)
x = decomposed.multiplicative$x
trend = decomposed.multiplicative$trend
seasonal = decomposed.multiplicative$seasonal
random = decomposed.multiplicative$random
decomposed.multiplicative.df = data.frame(x, trend, seasonal, random)
write.csv(decomposed.additive.df, file = "decomposed_additive.csv", row.names = FALSE)
write.csv(decomposed.multiplicative.df, file = "decomposed_multiplicative.csv", row.names = FALSE)
print(decomposed.additive.df[1:10])
print(decomposed.additive.df[1:10,])
print(decomposed.additive.df[67:,])
print(decomposed.additive.df[67:71,])
print(decomposed.multiplicative.df[1:10,])
print(decomposed.multiplicative.df[67:71,])
print(decomposed.multiplicative.df[1:7,])
print(decomposed.multiplicative.df[1:7,])
print(decomposed.multiplicative.df[68:70,])
rm(list=ls())
b = strsplit(a, "")
a = "92805"
b = strsplit(a, "")
b
b = strsplit(a, "")[[1]]
b = sum(as.numeric(strsplit(a, "")[[1]]))
f(c("sss", "dd", "g"))
f = function(l){
max(unlist(l))
}
f(c("sss", "dd", "g"))
nacount = function(g){
sum(is.na(g))
}
nacount(c(NA, 10, NA))
v = seq(1:15)
v = seq(1:3)
v = seq(1:3)
v1 = seq(1:3)
v2 = seq(1:3)
v3 = seq(1:3)
v4 = seq(1:3)
a = data.frame(v, v1, v2, v3, v4)
a
a = data.frame(v, v1, v2)
a
v = seq(1:5)
v1 = seq(1:5)
v2 = seq(1:5)
a = data.frame(v, v1, v2)
a
a[c(3,5), c(1,3)]
unlist(strsplit("abcde", "")[[1]])
