table = 1
print(table)
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1)
library(xlsx)
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1)
table = read.xls(file = "GAZ.xlsx", sheetIndex = 1, startRow = 1, encoding = "UTF-8")
library(xlsx)
table = read.xls(file = "GAZ.xlsx", sheetIndex = 1, startRow = 1, encoding = "UTF-8")
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1, startRow = 1, encoding = "UTF-8")
2 + 3
print(table)
table = 1
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1)
table[1:30,]
table[1:30]
class(table[, 1])
class(table[, 1])
View(table)
table[, 1] = as.Date(table[,1])
table[, 1] = as.Date(table[,1], format = "%d-%m_%y")
table[, 1] = as.Date(table[,1], format = "%d/%m/%y")
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1)
l = select(table, "дата.замера")
# Task 1
library(xlsx)
library(dplyr)
l = select(table, "дата.замера")
l = strsplit(l, "/", fixed = TRUE)
l = strsplit(l[1,], "/", fixed = TRUE)
l = select(table, "дата.замера")
l = strsplit(l[,1], "/", fixed = TRUE)
for(i in c(1:length(l))){
if(length(l[[i]]) == 1){
l[[i]] = as.Date(as.numeric(l[[i]]), origin = "1900-01-01")
}
else{
l[[i]] = as.Date(paste(l[[i]][1], l[[i]][2], l[[i]][3], sep="-"), format = "%d-%m-%Y")
}
}
l = data.frame("дата.замера" = as.Date(unlist(l)), select(table, -"дата.замера"))
# Task 2
l[l == ""] = NA
l = na.omit(l)
table = l
View(table)
class(table$Туст..С)
table$Туст..С = apply(as.numeric(table$Туст..С), FUN = to_kelvin)
# Task 3
to_kelvin = function(n){
n + 273.15
}
table$Туст..С = apply(as.numeric(table$Туст..С), FUN = to_kelvin)
table$Туст..С = lapply(as.numeric(table$Туст..С), FUN = to_kelvin)
table = table %>% rename("Температура (К)" = "Туст..с")
View(table)
table = table %>% rename("Температура (К)" = "Туст..С")
table = table %>% rename("Температура.(К)" = "Туст..С")
table = table %>% rename("Температура.(К)" = "Температура (К)")
# Task 4
table = table %>% mutate("газ/конденсат" = газ.м3.сут/конд.т.м3.сут)
# Task 4
table = mutate("газ/конденсат" = table$газ.м3.сут/table$конд.т.м3.сут)
# Task 4
mutate("газ/конденсат" = table$газ.м3.сут/table$конд.т.м3.сут)
# Task 4
table$газ.м3.сут = as.numeric(table$газ.м3.сут)
table$конд.т.м3.сут = as.numeric(table$конд.м3.сут)
table$конд.т.м3.сут = as.numeric(table$конд.т.м3.сут)
table = table %>% mutate("газ/конденсат" = газ.м3.сут/конд.т.м3.сут)
View(l)
table$вода.м3.сут = as.numeric(table$вода.м3.сут)
table = table %>% mutate("газ/вода" = газ.м3.сут/вода.м3.сут)
table = table %>% mutate("вода/конденсат" = вода.м3.сут/конд.т.м3.сут)
l[l == "0"] = NA
l[l == 0] = NA
l = na.omit(l)
table = l
# Task 3
to_kelvin = function(n){
n + 273.15
}
table$Туст..С = lapply(as.numeric(table$Туст..С), FUN = to_kelvin)
table = table %>% rename("Температура.(К)" = "Туст..С")
# Task 4
table = table %>% mutate("газ/конденсат" = газ.м3.сут/конд.т.м3.сут)
# Task 2
l$газ.м3.сут = as.numeric(table$газ.м3.сут)
l$конд.т.м3.сут = as.numeric(table$конд.т.м3.сут)
l$вода.м3.сут = as.numeric(table$вода.м3.сут)
l[l == ""] = NA
l[l == 0] = NA
l = na.omit(l)
table = l
# Task 3
to_kelvin = function(n){
n + 273.15
}
table$Туст..С = lapply(as.numeric(table$Туст..С), FUN = to_kelvin)
table = table %>% rename("Температура.(К)" = "Туст..С")
# Task 4
table = table %>% mutate("газ/конденсат" = газ.м3.сут/конд.т.м3.сут)
table = table %>% mutate("газ/вода" = газ.м3.сут/вода.м3.сут)
table = table %>% mutate("вода/конденсат" = вода.м3.сут/конд.т.м3.сут)
# Task 4
table$ID = factor(table$ID, ordered = TRUE)
table$Куст = factor(table$Куст, ordered = TRUE)
table$Группа = factor(table$Группа, ordered = TRUE)
class(table$Группа)
# Task 6
table.2018 = table %>% filter(as.POSIXlt(дата.замера)$year + 1900 == 2018)
View(table.2018)
# Task 7
table.ID.111 = table %>% filter(ID == 111)
View(table.ID.111)
# Task 8
water_by_id = select(c(table$ID, table$вода.м3.сут))
# Task 8
water_by_id = select(table$ID, table$вода.м3.сут)
# Task 8
water_by_id = table %>% select(ID, вода.м3.сут)
View(water_by_id)
water_by_id = table %>% group_by(ID)
# Task 8
water_by_id = table %>% select(ID, вода.м3.сут)
water_by_id = water_by_id %>% group_by(ID)
# Task 8
library(tidyr)
water_by_id = table %>% pivot_wider(names_from = ID, values_from = вода.м3.сут)
View(water_by_id)
water_by_id = table %>% select(ID, вода.м3.сут)
water_by_id = water_by_id %>% pivot_wider(names_from = ID, values_from = вода.м3.сут)
water_by_id = as.numeric(water_by_id)
water_by_id = table %>% select(ID, вода.м3.сут)
water_by_id = water_by_id %>% pivot_wider(names_from = ID, values_from = вода.м3.сут)
class(water_by_id[2,1])
water_by_id[2,1]
water_by_id[2]
water_by_id[1,1]
water_by_id[1,]
# Task 8
ids_to_remove = table %>%
group_by(ID) %>%
summarise(max_water = max(вода.м3.сут)) %>%
filter(max_water > 2) %>%
pull(ID)
table.water = table %>% filter(!(ID %in% ids_to_remove))
View(table.water)
View(table)
print(summarise(max_water = max(table$вода.м3.сут)))
table.water = table %>% filter(!(ID %in% ids_to_remove))
# Task 9
ids_to_remove = table %>%
group_by(ID) %>%
summarise(max_depth = max(sum(вода.м3.сут, газ.м3.сут, конд.т.м3.сут))) %>%
filter(max_depth > 1000) %>%
pull(ID)
table.depth = table %>% filter(!(ID %in% ids_to_remove))
View(table.depth)
# Task 9
table.depth = table %>% mutate("sum_mats" = газ.м3.сут + вода.м3.сут + конд.т.м3.сут)
# Task 9
table.sum.mats = table %>% mutate("sum_mats" = газ.м3.сут + вода.м3.сут + конд.т.м3.сут)
View(table.sum.mats)
ids_to_remove = table %>%
group_by(ID) %>%
summarise(min_mats = min(sum_mats)) %>%
filter(min_mats < 1000) %>%
pull(ID)
ids_to_remove = table.sum.mats %>%
group_by(ID) %>%
summarise(min_mats = min(sum_mats)) %>%
filter(min_mats < 1000) %>%
pull(ID)
table.depth = table %>% filter(!(ID %in% ids_to_remove))
ids_to_remove = table.sum.mats %>%
group_by(ID) %>%
summarise(min_mats = min(sum_mats)) %>%
filter(min_mats < 1000) %>%
pull(ID)
table.sum.mats = table %>% filter(!(ID %in% ids_to_remove))
View(table.sum.mats)
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
summarise(max_gas = sum(газ.м3.сут)) %>%
filter(max_gas == max(max_gas)) %>%
pull(ID)
# Task 10
table.best.bushes = table.2018
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
summarise(max_gas = sum(газ.м3.сут)) %>%
filter(max_gas == max(max_gas)) %>%
pull(ID)
View(table.best.bushes)
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
summarise(max_gas = sum(газ.м3.сут)) %>%
filter(max_gas == max(max_gas)) %>%
pull(Группа)
table.best.bushes = table.best.bushes %>% filter(!(ID %in% ids_to_remove))
View(table.best.bushes)
# Task 10
table.best.bushes = table.2018
ids_to_remove = table.best.bushes %>%
# Task 10
table.best.bushes = table.2018
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
print(summarise(max_gas = sum(газ.м3.сут))) %>%
filter(max_gas == max(max_gas)) %>%
pull(Группа)
# Task 10
table.best.bushes = table.2018
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
print(summarise(max_gas = sum(газ.м3.сут))) %>%
filter(max_gas == max(max_gas)) %>%
pull(Группа)
# Task 10
table.best.bushes = table.2018
View(table.best.bushes)
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
print(summarise(max_gas = sum(газ.м3.сут))) %>%
filter(max_gas == max(max_gas)) %>%
pull(Группа)
ids_to_remove = table.best.bushes %>%
group_by(Группа) %>%
print(summarise(max_gas = sum(газ.м3.сут))) %>%
summarise(max_gas = sum(газ.м3.сут)) %>%
filter(max_gas == max(max_gas)) %>%
pull(Группа)
# Task 10
table.best.bushes = table.2018
temp = table.best.bushes %>% select(Группа,газ.м3.сут)
View(temp)
temp = pivot_wider(temp)
temp = pivot_wider(temp, Группа)
temp = pivot_wider(temp, names_from = Группа, values_from = газ.м3.сут)
View(table.2018)
temp = apply(temp, FUN = sum)
temp = data.frame(lapply(temp, function(x) {
return (sum(unlist(x)))
}))
temp = lapply(temp, function(x) {
return (sum(unlist(x)))
})
View(temp)
temp = data.frame(lapply(temp, function(x) {
return (sum(unlist(x)))
}))
print(colnames(temp)[max.col(temp, ties.method = "first")])
# Task 11
table.bush = table.2018
# Task 11
table.bush = table.2018
temp = table.bush %>% select(Куст, вода.м3.сут)
temp = pivot_wider(temp, names_from = Куст, values_from = вода.м3.сут)
print(colnames(temp)[max.col(temp, ties.method = "first")])
# Task 11
table.bush = table.2018
temp = table.bush %>% select(Куст, вода.м3.сут)
temp = pivot_wider(temp, names_from = Куст, values_from = вода.м3.сут)
temp = data.frame(lapply(temp, function(x) {
return (sum(unlist(x)))
}))
print(colnames(temp)[max.col(temp, ties.method = "first")])
table.bush = table.bush %>% mutate("нефть/вода" = Ртр.МПа/вода.м3.сут)
# Task 12
table.bush = table
table.bush = table.bush %>% mutate("нефть/вода" = Ртр.МПа/вода.м3.сут)
# Task 2
l$Ртр.МПа = as.numeric(table$Ртр.МПа)
rm(list = ls)
rm(list = ls())
# Task 1
library(xlsx)
library(dplyr)
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1)
l = select(table, "дата.замера")
l = strsplit(l[,1], "/", fixed = TRUE)
for(i in c(1:length(l))){
if(length(l[[i]]) == 1){
l[[i]] = as.Date(as.numeric(l[[i]]), origin = "1900-01-01")
}
else{
l[[i]] = as.Date(paste(l[[i]][1], l[[i]][2], l[[i]][3], sep="-"), format = "%d-%m-%Y")
}
}
l = data.frame("дата.замера" = as.Date(unlist(l)), select(table, -"дата.замера"))
# Task 2
l$Ртр.МПа = as.numeric(table$Ртр.МПа)
l$газ.м3.сут = as.numeric(table$газ.м3.сут)
l$конд.т.м3.сут = as.numeric(table$конд.т.м3.сут)
l$вода.м3.сут = as.numeric(table$вода.м3.сут)
l[l == ""] = NA
l[l == 0] = NA
l = na.omit(l)
l = select(table, "дата.замера")
l = strsplit(l[,1], "/", fixed = TRUE)
for(i in c(1:length(l))){
if(length(l[[i]]) == 1){
l[[i]] = as.Date(as.numeric(l[[i]]), origin = "1900-01-01")
}
else{
l[[i]] = as.Date(paste(l[[i]][1], l[[i]][2], l[[i]][3], sep="-"), format = "%d-%m-%Y")
}
}
l = data.frame("дата.замера" = as.Date(unlist(l)), select(table, -"дата.замера"))
# Task 2
l$Ртр.МПа = as.numeric(table$Ртр.МПа)
l$газ.м3.сут = as.numeric(table$газ.м3.сут)
l$конд.т.м3.сут = as.numeric(table$конд.т.м3.сут)
l$вода.м3.сут = as.numeric(table$вода.м3.сут)
l[l == ""] = NA
l = na.omit(l)
l[l == ""] = NA
l = select(table, "дата.замера")
l = strsplit(l[,1], "/", fixed = TRUE)
for(i in c(1:length(l))){
if(length(l[[i]]) == 1){
l[[i]] = as.Date(as.numeric(l[[i]]), origin = "1900-01-01")
}
else{
l[[i]] = as.Date(paste(l[[i]][1], l[[i]][2], l[[i]][3], sep="-"), format = "%d-%m-%Y")
}
}
l = data.frame("дата.замера" = as.Date(unlist(l)), select(table, -"дата.замера"))
# Task 2
l$Ртр.МПа = as.numeric(table$Ртр.МПа)
l$газ.м3.сут = as.numeric(table$газ.м3.сут)
l$конд.т.м3.сут = as.numeric(table$конд.т.м3.сут)
l$вода.м3.сут = as.numeric(table$вода.м3.сут)
View(l)
l[l == ""] = NA
View(table)
table = read.xlsx(file = "GAZ.xlsx", sheetIndex = 1)
View(table)
table = table %>% select(-NA.)
l = select(table, "дата.замера")
l = strsplit(l[,1], "/", fixed = TRUE)
for(i in c(1:length(l))){
if(length(l[[i]]) == 1){
l[[i]] = as.Date(as.numeric(l[[i]]), origin = "1900-01-01")
}
else{
l[[i]] = as.Date(paste(l[[i]][1], l[[i]][2], l[[i]][3], sep="-"), format = "%d-%m-%Y")
}
}
l = data.frame("дата.замера" = as.Date(unlist(l)), select(table, -"дата.замера"))
# Task 2
l$Ртр.МПа = as.numeric(table$Ртр.МПа)
l$газ.м3.сут = as.numeric(table$газ.м3.сут)
l$конд.т.м3.сут = as.numeric(table$конд.т.м3.сут)
l$вода.м3.сут = as.numeric(table$вода.м3.сут)
l[l == ""] = NA
l[l == 0] = NA
l = na.omit(l)
table = l
# Task 3
to_kelvin = function(n){
n + 273.15
}
table$Туст..С = lapply(as.numeric(table$Туст..С), FUN = to_kelvin)
table = table %>% rename("Температура.(К)" = "Туст..С")
# Task 4
table$ID = factor(table$ID, ordered = TRUE)
table$Куст = factor(table$Куст, ordered = TRUE)
table$Группа = factor(table$Группа, ordered = TRUE)
# Task 5
table = table %>% mutate("газ/конденсат" = газ.м3.сут/конд.т.м3.сут)
table = table %>% mutate("газ/вода" = газ.м3.сут/вода.м3.сут)
table = table %>% mutate("вода/конденсат" = вода.м3.сут/конд.т.м3.сут)
# Task 6
table.2018 = table %>% filter(as.POSIXlt(дата.замера)$year + 1900 == 2018)
# Task 7
table.ID.111 = table %>% filter(ID == 111)
# Task 8
ids_to_remove = table %>%
group_by(ID) %>%
summarise(max_water = max(вода.м3.сут)) %>%
filter(max_water > 2) %>%
pull(ID)
table.water = table %>% filter(!(ID %in% ids_to_remove))
# Task 9
table.sum.mats = table %>% mutate("sum_mats" = газ.м3.сут + вода.м3.сут + конд.т.м3.сут)
ids_to_remove = table.sum.mats %>%
group_by(ID) %>%
summarise(min_mats = min(sum_mats)) %>%
filter(min_mats < 1000) %>%
pull(ID)
table.sum.mats = table %>% filter(!(ID %in% ids_to_remove))
# Task 10
table.best.bushes = table.2018
temp = table.best.bushes %>% select(Группа,газ.м3.сут)
temp = pivot_wider(temp, names_from = Группа, values_from = газ.м3.сут)
temp = data.frame(lapply(temp, function(x) {
return (sum(unlist(x)))
}))
print(colnames(temp)[max.col(temp, ties.method = "first")])
# Task 11
table.bush = table.2018
temp = table.bush %>% select(Куст, вода.м3.сут)
temp = pivot_wider(temp, names_from = Куст, values_from = вода.м3.сут)
temp = data.frame(lapply(temp, function(x) {
return (sum(unlist(x)))
}))
print(colnames(temp)[max.col(temp, ties.method = "first")])
# Task 12
table.bush = table
table.bush = table.bush %>% mutate("нефть/вода" = Ртр.МПа/вода.м3.сут)
View(table.bush)
temp = table.bush %>% select(Куст, нефть/вода)
temp = table.bush %>% select(Куст, "нефть/вода")
View(temp)
temp = pivot_wider(temp, names_from = Куст, values_from = "нефть/вода")
temp = data.frame(lapply(temp, function(x) {
return (mean(unlist(x)))
}))
print(colnames(temp)[max.col(temp, ties.method = "first")])
